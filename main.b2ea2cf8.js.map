{"version":3,"sources":["scripts/main.js"],"names":["api","endPoint","body","document","phonesIds","fetch","then","respone","json","phones","map","phone","id","getFirstReceivedDetails","arrIds","ids","response","promises","Promise","race","getAllSuccessfulDetails","all","showList","className","arr","newArr","Object","getPrototypeOf","Array","prototype","tittleText","split","word","toUpperCase","slice","join","element","insertAdjacentHTML","ul","querySelector","forEach","value","liWithId","liWithName","name","firstReceivedDetails","allSuccessfulDetails","getThreeFastestDetails","idsArr","threeFastestDetails","newIds","i","push","filter","newId"],"mappings":";AAAA,aAEA,MAAMA,EAAM,4DACNC,EAAW,UACXC,EAAOC,SAASD,KAEhBE,EAAYC,SAASL,iBACxBM,KAAKC,GAAWA,EAAQC,QACxBF,KAAKG,GAAUA,EAAOC,IAAIC,GAASA,EAAMC,KAEtCC,EAA2BC,GACxBA,EACJR,KAAKS,GACGA,EAAIL,IAAIE,GACNP,SAASL,YAAkBY,UAC/BN,KAAKU,GAAYA,EAASR,UAGhCF,KAAKW,GAAYC,QAAQC,KAAKF,IAG7BG,EAA2BN,GACxBA,EACJR,KAAKS,GACGA,EAAIL,IAAIE,GACNP,SAASL,YAAkBY,UAC/BN,KAAKU,GAAYA,EAASR,UAGhCF,KAAKW,GAAYC,QAAQG,IAAIJ,IAG5BK,EAAW,CAACC,EAAWC,KACrBC,MAAAA,EAAUC,OAAOC,eAAeH,KAASI,MAAMC,UACjD,CAACL,GACDA,EAEEM,EAAaP,EAChBQ,MAAM,KACNrB,IAAIsB,GAAQA,EAAK,GAAGC,cAAgBD,EAAKE,MAAM,IAC/CC,KAAK,KAEFC,uBACUb,kBACNO,0CAKV5B,EAAKmC,mBAAmB,YAAaD,GAE/BE,MAAAA,EAAKpC,EAAKqC,kBAAkBhB,KAAagB,cAAc,MAE7Dd,EAAOe,QAAQC,IACPC,MAAAA,aAAsBD,EAAM7B,KAC5B+B,eAA0BF,EAAMG,OAEtCN,EAAGD,mBAAmB,YAAaM,GACnCL,EAAGD,mBAAmB,YAAaK,EAAST,kBAIhDpB,EAAwBT,GACrBE,KAAKuC,IACJvB,EAAS,iBAAkBuB,KAG/BzB,EAAwBhB,GACrBE,KAAKwC,IACJxB,EAAS,iBAAkBwB,KAG/B,MAAMC,EAAyB,eAAeC,GACtCC,MAAAA,EAAsB,GACxBC,IAAAA,EAASF,EAER,IAAA,IAAIG,EAAI,EAAGA,EAAI,EAAGA,IACrBF,EAAoBG,WAAWvC,EAAwBqC,IAEvDA,EAASA,EAAO5C,KAAKS,GACZA,EAAIsC,OAAOC,GAASA,IAAUL,EAAoBE,GAAGvC,KAIzDqC,OAAAA,GAGTF,EAAuB3C","file":"main.b2ea2cf8.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst api = 'https://mate-academy.github.io/phone-catalogue-static/api';\nconst endPoint = '/phones';\nconst body = document.body;\n\nconst phonesIds = fetch(`${api}${endPoint}.json`)\n  .then(respone => respone.json())\n  .then(phones => phones.map(phone => phone.id));\n\nconst getFirstReceivedDetails = (arrIds) => {\n  return arrIds\n    .then(ids => {\n      return ids.map(id => {\n        return fetch(`${api}${endPoint}/${id}.json`)\n          .then(response => response.json());\n      });\n    })\n    .then(promises => Promise.race(promises));\n};\n\nconst getAllSuccessfulDetails = (arrIds) => {\n  return arrIds\n    .then(ids => {\n      return ids.map(id => {\n        return fetch(`${api}${endPoint}/${id}.json`)\n          .then(response => response.json());\n      });\n    })\n    .then(promises => Promise.all(promises));\n};\n\nconst showList = (className, arr) => {\n  const newArr = (Object.getPrototypeOf(arr) !== Array.prototype)\n    ? [arr]\n    : arr;\n\n  const tittleText = className\n    .split('-')\n    .map(word => word[0].toUpperCase() + word.slice(1))\n    .join(' ');\n\n  const element = `\n    <div class=\"${className}\">\n      <h3>${tittleText}</h3>\n      <ul></ul>\n    </div>\n  `;\n\n  body.insertAdjacentHTML('beforeend', element);\n\n  const ul = body.querySelector(`.${className}`).querySelector('ul');\n\n  newArr.forEach(value => {\n    const liWithId = `<li>ID: ${value.id}`;\n    const liWithName = `<li>Name: ${value.name}`;\n\n    ul.insertAdjacentHTML('beforeend', liWithName);\n    ul.insertAdjacentHTML('beforeend', liWithId.toUpperCase());\n  });\n};\n\ngetFirstReceivedDetails(phonesIds)\n  .then(firstReceivedDetails => {\n    showList('first-received', firstReceivedDetails);\n  });\n\ngetAllSuccessfulDetails(phonesIds)\n  .then(allSuccessfulDetails => {\n    showList('all-successful', allSuccessfulDetails);\n  });\n\nconst getThreeFastestDetails = async function(idsArr) {\n  const threeFastestDetails = [];\n  let newIds = idsArr;\n\n  for (let i = 0; i < 3; i++) {\n    threeFastestDetails.push(await getFirstReceivedDetails(newIds));\n\n    newIds = newIds.then(ids => {\n      return ids.filter(newId => newId !== threeFastestDetails[i].id);\n    });\n  }\n\n  return threeFastestDetails;\n};\n\ngetThreeFastestDetails(phonesIds);\n"]}